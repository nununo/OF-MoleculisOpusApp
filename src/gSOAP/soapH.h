/* soapH.h
   Generated by gSOAP 2.8.29 for roffssm.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_byte(soap, p, "byte", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_int(soap, p, "int", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_unsignedByte_DEFINED
#define SOAP_TYPE_unsignedByte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

inline int soap_write_unsignedByte(struct soap *soap, unsigned char const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_unsignedByte(soap, p, "unsignedByte", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

inline int soap_read_unsignedByte(struct soap *soap, unsigned char *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_unsignedByte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_unsignedInt_DEFINED
#define SOAP_TYPE_unsignedInt_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

inline int soap_write_unsignedInt(struct soap *soap, unsigned int const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_unsignedInt(soap, p, "unsignedInt", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

inline int soap_read_unsignedInt(struct soap *soap, unsigned int *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_unsignedInt(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _wsa5__RetryAfter is a typedef synonym for ULONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter_DEFINED
#define SOAP_TYPE__wsa5__RetryAfter_DEFINED

#define soap_default__wsa5__RetryAfter(soap, a) soap_default_ULONG64(soap, a)


#define soap__wsa5__RetryAfter2s soap_ULONG642s


#define soap_out__wsa5__RetryAfter soap_out_ULONG64


#define soap_s2_wsa5__RetryAfter soap_s2ULONG64


#define soap_in__wsa5__RetryAfter soap_in_ULONG64


#define soap_put__wsa5__RetryAfter soap_put_ULONG64


#define soap_write__wsa5__RetryAfter soap_write_ULONG64


#define soap_get__wsa5__RetryAfter soap_get_ULONG64


#define soap_read__wsa5__RetryAfter soap_read_ULONG64

#endif

#ifndef SOAP_TYPE_ULONG64_DEFINED
#define SOAP_TYPE_ULONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ULONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_ULONG64(struct soap *soap, ULONG64 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ULONG64(soap, p, "unsignedLong", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_ULONG64(struct soap *soap, ULONG64 *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ULONG64(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED
#define SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);

inline enum _wsa5__IsReferenceParameter * soap_new__wsa5__IsReferenceParameter(struct soap *soap, int n = -1)
{	return static_cast<enum _wsa5__IsReferenceParameter *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _wsa5__IsReferenceParameter)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

inline int soap_write__wsa5__IsReferenceParameter(struct soap *soap, enum _wsa5__IsReferenceParameter const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__wsa5__IsReferenceParameter(soap, p, "wsa5:IsReferenceParameter", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

inline int soap_read__wsa5__IsReferenceParameter(struct soap *soap, enum _wsa5__IsReferenceParameter *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get__wsa5__IsReferenceParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);

inline enum wsa5__FaultCodesType * soap_new_wsa5__FaultCodesType(struct soap *soap, int n = -1)
{	return static_cast<enum wsa5__FaultCodesType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum wsa5__FaultCodesType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

inline int soap_write_wsa5__FaultCodesType(struct soap *soap, enum wsa5__FaultCodesType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_wsa5__FaultCodesType(soap, p, "wsa5:FaultCodesType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

inline int soap_read_wsa5__FaultCodesType(struct soap *soap, enum wsa5__FaultCodesType *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_wsa5__FaultCodesType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__RelationshipType_DEFINED
#define SOAP_TYPE_wsa5__RelationshipType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);

inline enum wsa5__RelationshipType * soap_new_wsa5__RelationshipType(struct soap *soap, int n = -1)
{	return static_cast<enum wsa5__RelationshipType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum wsa5__RelationshipType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

inline int soap_write_wsa5__RelationshipType(struct soap *soap, enum wsa5__RelationshipType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_wsa5__RelationshipType(soap, p, "wsa5:RelationshipType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

inline int soap_read_wsa5__RelationshipType(struct soap *soap, enum wsa5__RelationshipType *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_wsa5__RelationshipType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__date10_DEFINED
#define SOAP_TYPE_ns1__date10_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__date10(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__date10(struct soap*, const std::string *);

#define soap_ns1__date102s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__date10(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns1__date10 soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns1__date10(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns1__date10 soap_instantiate_std__string


#define soap_new_ns1__date10 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__date10(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_ns1__date10(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ns1__date10(soap, p, "ns1:date10", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns1__date10(struct soap*, std::string *, const char*, const char*);

inline int soap_read_ns1__date10(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ns1__date10(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__char40_DEFINED
#define SOAP_TYPE_ns1__char40_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__char40(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__char40(struct soap*, const std::string *);

#define soap_ns1__char402s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__char40(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns1__char40 soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns1__char40(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns1__char40 soap_instantiate_std__string


#define soap_new_ns1__char40 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__char40(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_ns1__char40(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ns1__char40(soap, p, "ns1:char40", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns1__char40(struct soap*, std::string *, const char*, const char*);

inline int soap_read_ns1__char40(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ns1__char40(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__char30_DEFINED
#define SOAP_TYPE_ns1__char30_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__char30(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__char30(struct soap*, const std::string *);

#define soap_ns1__char302s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__char30(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns1__char30 soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns1__char30(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns1__char30 soap_instantiate_std__string


#define soap_new_ns1__char30 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__char30(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_ns1__char30(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ns1__char30(soap, p, "ns1:char30", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns1__char30(struct soap*, std::string *, const char*, const char*);

inline int soap_read_ns1__char30(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ns1__char30(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__char12_DEFINED
#define SOAP_TYPE_ns1__char12_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__char12(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__char12(struct soap*, const std::string *);

#define soap_ns1__char122s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__char12(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns1__char12 soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns1__char12(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns1__char12 soap_instantiate_std__string


#define soap_new_ns1__char12 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__char12(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_ns1__char12(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ns1__char12(soap, p, "ns1:char12", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns1__char12(struct soap*, std::string *, const char*, const char*);

inline int soap_read_ns1__char12(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ns1__char12(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__char10_DEFINED
#define SOAP_TYPE_ns1__char10_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__char10(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__char10(struct soap*, const std::string *);

#define soap_ns1__char102s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__char10(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns1__char10 soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns1__char10(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns1__char10 soap_instantiate_std__string


#define soap_new_ns1__char10 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__char10(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_ns1__char10(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ns1__char10(soap, p, "ns1:char10", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns1__char10(struct soap*, std::string *, const char*, const char*);

inline int soap_read_ns1__char10(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ns1__char10(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__char1_DEFINED
#define SOAP_TYPE_ns1__char1_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__char1(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__char1(struct soap*, const std::string *);

#define soap_ns1__char12s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__char1(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2ns1__char1 soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns1__char1(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_ns1__char1 soap_instantiate_std__string


#define soap_new_ns1__char1 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__char1(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_ns1__char1(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ns1__char1(soap, p, "ns1:char1", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns1__char1(struct soap*, std::string *, const char*, const char*);

inline int soap_read_ns1__char1(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ns1__char1(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_std__string_DEFINED
#define SOAP_TYPE_std__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1)
{	return soap_instantiate_std__string(soap, n, NULL, NULL, NULL);
}

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_std__string(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_std__string(soap, p, "string", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

inline int soap_read_std__string(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_std__string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__byte16_DEFINED
#define SOAP_TYPE_ns1__byte16_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__byte16(struct soap*, xsd__base64Binary *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__byte16(struct soap*, const xsd__base64Binary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__byte16(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_ns1__byte16(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_instantiate_ns1__byte16 soap_instantiate_xsd__base64Binary


#define soap_new_ns1__byte16 soap_new_xsd__base64Binary


#define soap_new_req_ns1__byte16 soap_new_req_xsd__base64Binary


#define soap_new_set_ns1__byte16 soap_new_set_xsd__base64Binary

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__byte16(struct soap*, const xsd__base64Binary *, const char*, const char*);

inline int soap_write_ns1__byte16(struct soap *soap, xsd__base64Binary const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_ns1__byte16(soap, p), 0) || soap_put_ns1__byte16(soap, p, "ns1:byte16", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_ns1__byte16(struct soap*, xsd__base64Binary *, const char*, const char*);

inline int soap_read_ns1__byte16(struct soap *soap, xsd__base64Binary *p)
{	if (p)
	{	soap_default_ns1__byte16(soap, p);
		if (soap_begin_recv(soap) || soap_get_ns1__byte16(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse_DEFINED
#define SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, const char*, int, const _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *, const char*);
SOAP_FMAC3 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * SOAP_FMAC4 soap_in__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, const char*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *, const char*);
SOAP_FMAC1 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * SOAP_FMAC2 soap_instantiate__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap *soap, int n = -1)
{	return soap_instantiate__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap, n, NULL, NULL, NULL);
}

inline _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * soap_new_req__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(
	struct soap *soap,
	ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *MESSAGES,
	ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *PROJECTS)
{	_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *_p = soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::MESSAGES = MESSAGES;
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::PROJECTS = PROJECTS;
	}
	return _p;
}

inline _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * soap_new_set__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(
	struct soap *soap,
	ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *MESSAGES,
	ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *PROJECTS)
{	_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *_p = soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::MESSAGES = MESSAGES;
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::PROJECTS = PROJECTS;
	}
	return _p;
}

inline int soap_write__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap *soap, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Z_SSM_LIST_MESSAGESResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * SOAP_FMAC4 soap_get__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *, const char*, const char*);

inline int soap_read__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap *soap, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_DEFINED
#define SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const char*, int, const _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*);
SOAP_FMAC3 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC4 soap_in__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const char*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*);
SOAP_FMAC1 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC2 soap_instantiate__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap *soap, int n = -1)
{	return soap_instantiate__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, n, NULL, NULL, NULL);
}

inline _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * soap_new_req__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
	struct soap *soap,
	const std::string& ALL,
	const std::string& DATA)
{	_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *_p = soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::ALL = ALL;
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::DATA = DATA;
	}
	return _p;
}

inline _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * soap_new_set__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
	struct soap *soap,
	const std::string& ALL,
	const std::string& DATA)
{	_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *_p = soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::ALL = ALL;
		_p->_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::DATA = DATA;
	}
	return _p;
}

inline int soap_write__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap *soap, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:Z_SSM_LIST_MESSAGES", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC4 soap_get__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*, const char*);

inline int soap_read__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap *soap, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST_DEFINED
#define SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, const char*, int, const ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * SOAP_FMAC4 soap_in_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *, const char*);
SOAP_FMAC1 ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * soap_new_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap *soap, int n = -1)
{	return soap_instantiate_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap, n, NULL, NULL, NULL);
}

inline ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * soap_new_req_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(
	struct soap *soap)
{	ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *_p = soap_new_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * soap_new_set_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(
	struct soap *soap,
	const std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> & item)
{	ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *_p = soap_new_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST::item = item;
	}
	return _p;
}

inline int soap_write_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap *soap, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ZSSM_T_PROJ_LIST", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * SOAP_FMAC4 soap_get_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *, const char*, const char*);

inline int soap_read_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap *soap, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST_DEFINED
#define SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, const char*, int, const ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * SOAP_FMAC4 soap_in_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *, const char*);
SOAP_FMAC1 ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * soap_new_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap *soap, int n = -1)
{	return soap_instantiate_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap, n, NULL, NULL, NULL);
}

inline ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * soap_new_req_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(
	struct soap *soap)
{	ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *_p = soap_new_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * soap_new_set_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(
	struct soap *soap,
	const std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> & item)
{	ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *_p = soap_new_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST::item = item;
	}
	return _p;
}

inline int soap_write_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap *soap, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ZSSM_T_MESSAGE_LIST", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * SOAP_FMAC4 soap_get_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *, const char*, const char*);

inline int soap_read_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap *soap, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST_DEFINED
#define SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const char*, int, const ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * SOAP_FMAC4 soap_in_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *, const char*);
SOAP_FMAC1 ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * soap_new_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap *soap, int n = -1)
{	return soap_instantiate_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap, n, NULL, NULL, NULL);
}

inline ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * soap_new_req_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(
	struct soap *soap,
	const std::string& OBJECT_USCOREID,
	const std::string& ID_USCOREROFF,
	const std::string& ID_USCOREPROJ_USCOREROFF)
{	ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *_p = soap_new_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::OBJECT_USCOREID = OBJECT_USCOREID;
		_p->ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::ID_USCOREROFF = ID_USCOREROFF;
		_p->ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::ID_USCOREPROJ_USCOREROFF = ID_USCOREPROJ_USCOREROFF;
	}
	return _p;
}

inline ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * soap_new_set_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(
	struct soap *soap,
	const std::string& OBJECT_USCOREID,
	const std::string& ID_USCOREROFF,
	const std::string& ID_USCOREPROJ_USCOREROFF)
{	ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *_p = soap_new_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::OBJECT_USCOREID = OBJECT_USCOREID;
		_p->ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::ID_USCOREROFF = ID_USCOREROFF;
		_p->ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::ID_USCOREPROJ_USCOREROFF = ID_USCOREPROJ_USCOREROFF;
	}
	return _p;
}

inline int soap_write_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap *soap, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ZSSM_S_PROJ_LIST", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * SOAP_FMAC4 soap_get_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *, const char*, const char*);

inline int soap_read_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap *soap, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST_DEFINED
#define SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const char*, int, const ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * SOAP_FMAC4 soap_in_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *, const char*);
SOAP_FMAC1 ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * soap_new_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap *soap, int n = -1)
{	return soap_instantiate_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap, n, NULL, NULL, NULL);
}

inline ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * soap_new_req_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(
	struct soap *soap,
	const std::string& ID_USCOREROFF,
	const std::string& ID_USCORESAP,
	const std::string& PARTNER,
	const std::string& OBJECT_USCOREID,
	const std::string& DESCRIPTION,
	const std::string& STATUS,
	const std::string& POSTING_USCOREDATE,
	const std::string& CLOSE_USCOREDATE,
	const xsd__base64Binary& GUID,
	const std::string& INCIDENT)
{	ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *_p = soap_new_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::ID_USCOREROFF = ID_USCOREROFF;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::ID_USCORESAP = ID_USCORESAP;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::PARTNER = PARTNER;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::OBJECT_USCOREID = OBJECT_USCOREID;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::DESCRIPTION = DESCRIPTION;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::STATUS = STATUS;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::POSTING_USCOREDATE = POSTING_USCOREDATE;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::CLOSE_USCOREDATE = CLOSE_USCOREDATE;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::GUID = GUID;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::INCIDENT = INCIDENT;
	}
	return _p;
}

inline ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * soap_new_set_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(
	struct soap *soap,
	const std::string& ID_USCOREROFF,
	const std::string& ID_USCORESAP,
	const std::string& PARTNER,
	const std::string& OBJECT_USCOREID,
	const std::string& DESCRIPTION,
	const std::string& STATUS,
	const std::string& POSTING_USCOREDATE,
	const std::string& CLOSE_USCOREDATE,
	const xsd__base64Binary& GUID,
	const std::string& INCIDENT)
{	ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *_p = soap_new_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::ID_USCOREROFF = ID_USCOREROFF;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::ID_USCORESAP = ID_USCORESAP;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::PARTNER = PARTNER;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::OBJECT_USCOREID = OBJECT_USCOREID;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::DESCRIPTION = DESCRIPTION;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::STATUS = STATUS;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::POSTING_USCOREDATE = POSTING_USCOREDATE;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::CLOSE_USCOREDATE = CLOSE_USCOREDATE;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::GUID = GUID;
		_p->ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::INCIDENT = INCIDENT;
	}
	return _p;
}

inline int soap_write_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap *soap, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ns1:ZSSM_S_MESSAGE_LIST", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * SOAP_FMAC4 soap_get_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *, const char*, const char*);

inline int soap_read_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap *soap, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_xsd__base64Binary_DEFINED
#define SOAP_TYPE_xsd__base64Binary_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);
SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1)
{	return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL);
}

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(
	struct soap *soap)
{	xsd__base64Binary *_p = soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(
	struct soap *soap,
	unsigned char *__ptr,
	int __size,
	char *id,
	char *type,
	char *options)
{	xsd__base64Binary *_p = soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->xsd__base64Binary::__ptr = __ptr;
		_p->xsd__base64Binary::__size = __size;
		_p->xsd__base64Binary::id = id;
		_p->xsd__base64Binary::type = type;
		_p->xsd__base64Binary::options = options;
	}
	return _p;
}

inline int soap_write_xsd__base64Binary(struct soap *soap, xsd__base64Binary const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

inline int soap_read_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_xsd__base64Binary(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{	return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, p), 0) || soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{	if (p)
	{	soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{	return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, p), 0) || soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{	if (p)
	{	soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{	return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, p), 0) || soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{	if (p)
	{	soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{	return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, p), 0) || soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{	if (p)
	{	soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{	return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap,
	char *wsa5__MessageID,
	struct wsa5__RelatesToType *wsa5__RelatesTo,
	struct wsa5__EndpointReferenceType *wsa5__From,
	struct wsa5__EndpointReferenceType *wsa5__ReplyTo,
	struct wsa5__EndpointReferenceType *wsa5__FaultTo,
	char *wsa5__To,
	char *wsa5__Action,
	struct chan__ChannelInstanceType *chan__ChannelInstance)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
		_p->wsa5__MessageID = wsa5__MessageID;
		_p->wsa5__RelatesTo = wsa5__RelatesTo;
		_p->wsa5__From = wsa5__From;
		_p->wsa5__ReplyTo = wsa5__ReplyTo;
		_p->wsa5__FaultTo = wsa5__FaultTo;
		_p->wsa5__To = wsa5__To;
		_p->wsa5__Action = wsa5__Action;
		_p->chan__ChannelInstance = chan__ChannelInstance;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, p), 0) || soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{	if (p)
	{	soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_chan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC1 struct chan__ChannelInstanceType * SOAP_FMAC2 soap_instantiate_chan__ChannelInstanceType(struct soap*, int, const char*, const char*, size_t*);

inline struct chan__ChannelInstanceType * soap_new_chan__ChannelInstanceType(struct soap *soap, int n = -1)
{	return soap_instantiate_chan__ChannelInstanceType(soap, n, NULL, NULL, NULL);
}

inline struct chan__ChannelInstanceType * soap_new_req_chan__ChannelInstanceType(
	struct soap *soap,
	int __item)
{	struct chan__ChannelInstanceType *_p = soap_new_chan__ChannelInstanceType(soap);
	if (_p)
	{	soap_default_chan__ChannelInstanceType(soap, _p);
		_p->__item = __item;
	}
	return _p;
}

inline struct chan__ChannelInstanceType * soap_new_set_chan__ChannelInstanceType(
	struct soap *soap,
	int __item,
	enum _wsa5__IsReferenceParameter wsa5__IsReferenceParameter)
{	struct chan__ChannelInstanceType *_p = soap_new_chan__ChannelInstanceType(soap);
	if (_p)
	{	soap_default_chan__ChannelInstanceType(soap, _p);
		_p->__item = __item;
		_p->wsa5__IsReferenceParameter = wsa5__IsReferenceParameter;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

inline int soap_write_chan__ChannelInstanceType(struct soap *soap, struct chan__ChannelInstanceType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_chan__ChannelInstanceType(soap, p), 0) || soap_put_chan__ChannelInstanceType(soap, p, "chan:ChannelInstanceType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

inline int soap_read_chan__ChannelInstanceType(struct soap *soap, struct chan__ChannelInstanceType *p)
{	if (p)
	{	soap_default_chan__ChannelInstanceType(soap, p);
		if (soap_begin_recv(soap) || soap_get_chan__ChannelInstanceType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _wsa5__ProblemAction is a typedef synonym for wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction_DEFINED
#define SOAP_TYPE__wsa5__ProblemAction_DEFINED

#define soap_default__wsa5__ProblemAction(soap, a) soap_default_wsa5__ProblemActionType(soap, a)


#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap__wsa5__ProblemAction2s soap_wsa5__ProblemActionType2s


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_s2_wsa5__ProblemAction soap_s2wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType


#define soap_instantiate__wsa5__ProblemAction soap_instantiate_wsa5__ProblemActionType


#define soap_new__wsa5__ProblemAction soap_new_wsa5__ProblemActionType


#define soap_new_req__wsa5__ProblemAction soap_new_req_wsa5__ProblemActionType


#define soap_new_set__wsa5__ProblemAction soap_new_set_wsa5__ProblemActionType


#define soap_put__wsa5__ProblemAction soap_put_wsa5__ProblemActionType


#define soap_write__wsa5__ProblemAction soap_write_wsa5__ProblemActionType


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_read__wsa5__ProblemAction soap_read_wsa5__ProblemActionType

#endif
/* _wsa5__FaultTo is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo_DEFINED
#define SOAP_TYPE__wsa5__FaultTo_DEFINED

#define soap_default__wsa5__FaultTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__FaultTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__FaultTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__FaultTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__FaultTo soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__FaultTo soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__FaultTo soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__FaultTo soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__FaultTo soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__FaultTo soap_read_wsa5__EndpointReferenceType

#endif
/* _wsa5__From is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From_DEFINED
#define SOAP_TYPE__wsa5__From_DEFINED

#define soap_default__wsa5__From(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__From2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__From soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__From soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__From soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__From soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__From soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__From soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__From soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__From soap_read_wsa5__EndpointReferenceType

#endif
/* _wsa5__ReplyTo is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo_DEFINED
#define SOAP_TYPE__wsa5__ReplyTo_DEFINED

#define soap_default__wsa5__ReplyTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__ReplyTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__ReplyTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__ReplyTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__ReplyTo soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__ReplyTo soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__ReplyTo soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__ReplyTo soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__ReplyTo soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__ReplyTo soap_read_wsa5__EndpointReferenceType

#endif
/* _wsa5__RelatesTo is a typedef synonym for wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo_DEFINED
#define SOAP_TYPE__wsa5__RelatesTo_DEFINED

#define soap_default__wsa5__RelatesTo(soap, a) soap_default_wsa5__RelatesToType(soap, a)


#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap__wsa5__RelatesTo2s soap_wsa5__RelatesToType2s


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_s2_wsa5__RelatesTo soap_s2wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType


#define soap_instantiate__wsa5__RelatesTo soap_instantiate_wsa5__RelatesToType


#define soap_new__wsa5__RelatesTo soap_new_wsa5__RelatesToType


#define soap_new_req__wsa5__RelatesTo soap_new_req_wsa5__RelatesToType


#define soap_new_set__wsa5__RelatesTo soap_new_set_wsa5__RelatesToType


#define soap_put__wsa5__RelatesTo soap_put_wsa5__RelatesToType


#define soap_write__wsa5__RelatesTo soap_write_wsa5__RelatesToType


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_read__wsa5__RelatesTo soap_read_wsa5__RelatesToType

#endif
/* _wsa5__Metadata is a typedef synonym for wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata_DEFINED
#define SOAP_TYPE__wsa5__Metadata_DEFINED

#define soap_default__wsa5__Metadata(soap, a) soap_default_wsa5__MetadataType(soap, a)


#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap__wsa5__Metadata2s soap_wsa5__MetadataType2s


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_s2_wsa5__Metadata soap_s2wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType


#define soap_instantiate__wsa5__Metadata soap_instantiate_wsa5__MetadataType


#define soap_new__wsa5__Metadata soap_new_wsa5__MetadataType


#define soap_new_req__wsa5__Metadata soap_new_req_wsa5__MetadataType


#define soap_new_set__wsa5__Metadata soap_new_set_wsa5__MetadataType


#define soap_put__wsa5__Metadata soap_put_wsa5__MetadataType


#define soap_write__wsa5__Metadata soap_write_wsa5__MetadataType


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_read__wsa5__Metadata soap_read_wsa5__MetadataType

#endif
/* _wsa5__ReferenceParameters is a typedef synonym for wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters_DEFINED
#define SOAP_TYPE__wsa5__ReferenceParameters_DEFINED

#define soap_default__wsa5__ReferenceParameters(soap, a) soap_default_wsa5__ReferenceParametersType(soap, a)


#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap__wsa5__ReferenceParameters2s soap_wsa5__ReferenceParametersType2s


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_s2_wsa5__ReferenceParameters soap_s2wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType


#define soap_instantiate__wsa5__ReferenceParameters soap_instantiate_wsa5__ReferenceParametersType


#define soap_new__wsa5__ReferenceParameters soap_new_wsa5__ReferenceParametersType


#define soap_new_req__wsa5__ReferenceParameters soap_new_req_wsa5__ReferenceParametersType


#define soap_new_set__wsa5__ReferenceParameters soap_new_set_wsa5__ReferenceParametersType


#define soap_put__wsa5__ReferenceParameters soap_put_wsa5__ReferenceParametersType


#define soap_write__wsa5__ReferenceParameters soap_write_wsa5__ReferenceParametersType


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_read__wsa5__ReferenceParameters soap_read_wsa5__ReferenceParametersType

#endif
/* _wsa5__EndpointReference is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference_DEFINED
#define SOAP_TYPE__wsa5__EndpointReference_DEFINED

#define soap_default__wsa5__EndpointReference(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__EndpointReference2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__EndpointReference soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__EndpointReference soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__EndpointReference soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__EndpointReference soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__EndpointReference soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__EndpointReference soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__EndpointReference soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__EndpointReference soap_read_wsa5__EndpointReferenceType

#endif

#ifndef SOAP_TYPE_wsa5__ProblemActionType_DEFINED
#define SOAP_TYPE_wsa5__ProblemActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC1 struct wsa5__ProblemActionType * SOAP_FMAC2 soap_instantiate_wsa5__ProblemActionType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ProblemActionType * soap_new_wsa5__ProblemActionType(struct soap *soap, int n = -1)
{	return soap_instantiate_wsa5__ProblemActionType(soap, n, NULL, NULL, NULL);
}

inline struct wsa5__ProblemActionType * soap_new_req_wsa5__ProblemActionType(
	struct soap *soap)
{	struct wsa5__ProblemActionType *_p = soap_new_wsa5__ProblemActionType(soap);
	if (_p)
	{	soap_default_wsa5__ProblemActionType(soap, _p);
	}
	return _p;
}

inline struct wsa5__ProblemActionType * soap_new_set_wsa5__ProblemActionType(
	struct soap *soap,
	char *Action,
	char *SoapAction,
	char *__anyAttribute)
{	struct wsa5__ProblemActionType *_p = soap_new_wsa5__ProblemActionType(soap);
	if (_p)
	{	soap_default_wsa5__ProblemActionType(soap, _p);
		_p->Action = Action;
		_p->SoapAction = SoapAction;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

inline int soap_write_wsa5__ProblemActionType(struct soap *soap, struct wsa5__ProblemActionType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_wsa5__ProblemActionType(soap, p), 0) || soap_put_wsa5__ProblemActionType(soap, p, "wsa5:ProblemActionType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

inline int soap_read_wsa5__ProblemActionType(struct soap *soap, struct wsa5__ProblemActionType *p)
{	if (p)
	{	soap_default_wsa5__ProblemActionType(soap, p);
		if (soap_begin_recv(soap) || soap_get_wsa5__ProblemActionType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__RelatesToType_DEFINED
#define SOAP_TYPE_wsa5__RelatesToType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);
SOAP_FMAC1 struct wsa5__RelatesToType * SOAP_FMAC2 soap_instantiate_wsa5__RelatesToType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__RelatesToType * soap_new_wsa5__RelatesToType(struct soap *soap, int n = -1)
{	return soap_instantiate_wsa5__RelatesToType(soap, n, NULL, NULL, NULL);
}

inline struct wsa5__RelatesToType * soap_new_req_wsa5__RelatesToType(
	struct soap *soap)
{	struct wsa5__RelatesToType *_p = soap_new_wsa5__RelatesToType(soap);
	if (_p)
	{	soap_default_wsa5__RelatesToType(soap, _p);
	}
	return _p;
}

inline struct wsa5__RelatesToType * soap_new_set_wsa5__RelatesToType(
	struct soap *soap,
	char *__item,
	char *RelationshipType,
	char *__anyAttribute)
{	struct wsa5__RelatesToType *_p = soap_new_wsa5__RelatesToType(soap);
	if (_p)
	{	soap_default_wsa5__RelatesToType(soap, _p);
		_p->__item = __item;
		_p->RelationshipType = RelationshipType;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

inline int soap_write_wsa5__RelatesToType(struct soap *soap, struct wsa5__RelatesToType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_wsa5__RelatesToType(soap, p), 0) || soap_put_wsa5__RelatesToType(soap, p, "wsa5:RelatesToType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

inline int soap_read_wsa5__RelatesToType(struct soap *soap, struct wsa5__RelatesToType *p)
{	if (p)
	{	soap_default_wsa5__RelatesToType(soap, p);
		if (soap_begin_recv(soap) || soap_get_wsa5__RelatesToType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__MetadataType_DEFINED
#define SOAP_TYPE_wsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);
SOAP_FMAC1 struct wsa5__MetadataType * SOAP_FMAC2 soap_instantiate_wsa5__MetadataType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__MetadataType * soap_new_wsa5__MetadataType(struct soap *soap, int n = -1)
{	return soap_instantiate_wsa5__MetadataType(soap, n, NULL, NULL, NULL);
}

inline struct wsa5__MetadataType * soap_new_req_wsa5__MetadataType(
	struct soap *soap,
	int __size,
	char **__any)
{	struct wsa5__MetadataType *_p = soap_new_wsa5__MetadataType(soap);
	if (_p)
	{	soap_default_wsa5__MetadataType(soap, _p);
		_p->__size = __size;
		_p->__any = __any;
	}
	return _p;
}

inline struct wsa5__MetadataType * soap_new_set_wsa5__MetadataType(
	struct soap *soap,
	int __size,
	char **__any,
	char *__anyAttribute)
{	struct wsa5__MetadataType *_p = soap_new_wsa5__MetadataType(soap);
	if (_p)
	{	soap_default_wsa5__MetadataType(soap, _p);
		_p->__size = __size;
		_p->__any = __any;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

inline int soap_write_wsa5__MetadataType(struct soap *soap, struct wsa5__MetadataType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_wsa5__MetadataType(soap, p), 0) || soap_put_wsa5__MetadataType(soap, p, "wsa5:MetadataType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

inline int soap_read_wsa5__MetadataType(struct soap *soap, struct wsa5__MetadataType *p)
{	if (p)
	{	soap_default_wsa5__MetadataType(soap, p);
		if (soap_begin_recv(soap) || soap_get_wsa5__MetadataType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC1 struct wsa5__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa5__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ReferenceParametersType * soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n = -1)
{	return soap_instantiate_wsa5__ReferenceParametersType(soap, n, NULL, NULL, NULL);
}

inline struct wsa5__ReferenceParametersType * soap_new_req_wsa5__ReferenceParametersType(
	struct soap *soap,
	int __size,
	char **__any)
{	struct wsa5__ReferenceParametersType *_p = soap_new_wsa5__ReferenceParametersType(soap);
	if (_p)
	{	soap_default_wsa5__ReferenceParametersType(soap, _p);
		_p->__size = __size;
		_p->__any = __any;
	}
	return _p;
}

inline struct wsa5__ReferenceParametersType * soap_new_set_wsa5__ReferenceParametersType(
	struct soap *soap,
	int *chan__ChannelInstance,
	int __size,
	char **__any,
	char *__anyAttribute)
{	struct wsa5__ReferenceParametersType *_p = soap_new_wsa5__ReferenceParametersType(soap);
	if (_p)
	{	soap_default_wsa5__ReferenceParametersType(soap, _p);
		_p->chan__ChannelInstance = chan__ChannelInstance;
		_p->__size = __size;
		_p->__any = __any;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

inline int soap_write_wsa5__ReferenceParametersType(struct soap *soap, struct wsa5__ReferenceParametersType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_wsa5__ReferenceParametersType(soap, p), 0) || soap_put_wsa5__ReferenceParametersType(soap, p, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

inline int soap_read_wsa5__ReferenceParametersType(struct soap *soap, struct wsa5__ReferenceParametersType *p)
{	if (p)
	{	soap_default_wsa5__ReferenceParametersType(soap, p);
		if (soap_begin_recv(soap) || soap_get_wsa5__ReferenceParametersType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
#define SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC1 struct wsa5__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa5__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__EndpointReferenceType * soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n = -1)
{	return soap_instantiate_wsa5__EndpointReferenceType(soap, n, NULL, NULL, NULL);
}

inline struct wsa5__EndpointReferenceType * soap_new_req_wsa5__EndpointReferenceType(
	struct soap *soap,
	char *Address,
	int __size,
	char **__any)
{	struct wsa5__EndpointReferenceType *_p = soap_new_wsa5__EndpointReferenceType(soap);
	if (_p)
	{	soap_default_wsa5__EndpointReferenceType(soap, _p);
		_p->Address = Address;
		_p->__size = __size;
		_p->__any = __any;
	}
	return _p;
}

inline struct wsa5__EndpointReferenceType * soap_new_set_wsa5__EndpointReferenceType(
	struct soap *soap,
	char *Address,
	struct wsa5__ReferenceParametersType *ReferenceParameters,
	struct wsa5__MetadataType *Metadata,
	int __size,
	char **__any,
	char *__anyAttribute)
{	struct wsa5__EndpointReferenceType *_p = soap_new_wsa5__EndpointReferenceType(soap);
	if (_p)
	{	soap_default_wsa5__EndpointReferenceType(soap, _p);
		_p->Address = Address;
		_p->ReferenceParameters = ReferenceParameters;
		_p->Metadata = Metadata;
		_p->__size = __size;
		_p->__any = __any;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

inline int soap_write_wsa5__EndpointReferenceType(struct soap *soap, struct wsa5__EndpointReferenceType const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_wsa5__EndpointReferenceType(soap, p), 0) || soap_put_wsa5__EndpointReferenceType(soap, p, "wsa5:EndpointReferenceType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

inline int soap_read_wsa5__EndpointReferenceType(struct soap *soap, struct wsa5__EndpointReferenceType *p)
{	if (p)
	{	soap_default_wsa5__EndpointReferenceType(soap, p);
		if (soap_begin_recv(soap) || soap_get_wsa5__EndpointReferenceType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES__DEFINED
#define SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, const struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, const char*, int, const struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *, const char*);
SOAP_FMAC3 struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * SOAP_FMAC4 soap_in___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, const char*, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *, const char*);
SOAP_FMAC1 struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * SOAP_FMAC2 soap_instantiate___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap *soap, int n = -1)
{	return soap_instantiate___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * soap_new_req___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(
	struct soap *soap)
{	struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *_p = soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap);
	if (_p)
	{	soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, _p);
	}
	return _p;
}

inline struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * soap_new_set___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(
	struct soap *soap,
	_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES)
{	struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *_p = soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap);
	if (_p)
	{	soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, _p);
		_p->ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES = ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, const struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *, const char*, const char*);

inline int soap_write___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap *soap, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, p), 0) || soap_put___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, p, "-ns1:Z_SSM_LIST_MESSAGES", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * SOAP_FMAC4 soap_get___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *, const char*, const char*);

inline int soap_read___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap *soap, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ *p)
{	if (p)
	{	soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, p);
		if (soap_begin_recv(soap) || soap_get___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_DEFINED
#define SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const char*, int, const struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*);
SOAP_FMAC3 struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC4 soap_in___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const char*, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*);
SOAP_FMAC1 struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC2 soap_instantiate___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap *soap, int n = -1)
{	return soap_instantiate___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * soap_new_req___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
	struct soap *soap)
{	struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *_p = soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap);
	if (_p)
	{	soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, _p);
	}
	return _p;
}

inline struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * soap_new_set___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
	struct soap *soap,
	_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES)
{	struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *_p = soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap);
	if (_p)
	{	soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, _p);
		_p->ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES = ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*, const char*);

inline int soap_write___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap *soap, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, p), 0) || soap_put___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, p, "-ns1:Z_SSM_LIST_MESSAGES", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC4 soap_get___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *, const char*, const char*);

inline int soap_read___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap *soap, struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *p)
{	if (p)
	{	soap_default___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, p);
		if (soap_begin_recv(soap) || soap_get___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__From_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__From_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);
#endif
/* _wsa5__ProblemIRI is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI_DEFINED
#define SOAP_TYPE__wsa5__ProblemIRI_DEFINED

#define soap_default__wsa5__ProblemIRI(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap__wsa5__ProblemIRI2s soap_string2s


#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_s2_wsa5__ProblemIRI soap_s2string


#define soap_in__wsa5__ProblemIRI soap_in_string


#define soap_put__wsa5__ProblemIRI soap_put_string


#define soap_write__wsa5__ProblemIRI soap_write_string


#define soap_get__wsa5__ProblemIRI soap_get_string


#define soap_read__wsa5__ProblemIRI soap_read_string

#endif
/* _wsa5__ProblemHeaderQName is a typedef synonym for _QName */

#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED
#define SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED

#define soap_default__wsa5__ProblemHeaderQName(soap, a) soap_default__QName(soap, a)


#define soap_serialize__wsa5__ProblemHeaderQName soap_serialize__QName


#define soap_out__wsa5__ProblemHeaderQName soap_out__QName


#define soap_in__wsa5__ProblemHeaderQName soap_in__QName


#define soap_put__wsa5__ProblemHeaderQName soap_put__QName


#define soap_write__wsa5__ProblemHeaderQName soap_write__QName


#define soap_get__wsa5__ProblemHeaderQName soap_get__QName


#define soap_read__wsa5__ProblemHeaderQName soap_read__QName

#endif
/* _wsa5__Action is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__Action_DEFINED
#define SOAP_TYPE__wsa5__Action_DEFINED

#define soap_default__wsa5__Action(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap__wsa5__Action2s soap_string2s


#define soap_out__wsa5__Action soap_out_string


#define soap_s2_wsa5__Action soap_s2string


#define soap_in__wsa5__Action soap_in_string


#define soap_put__wsa5__Action soap_put_string


#define soap_write__wsa5__Action soap_write_string


#define soap_get__wsa5__Action soap_get_string


#define soap_read__wsa5__Action soap_read_string

#endif
/* _wsa5__To is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__To_DEFINED
#define SOAP_TYPE__wsa5__To_DEFINED

#define soap_default__wsa5__To(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__To soap_serialize_string


#define soap__wsa5__To2s soap_string2s


#define soap_out__wsa5__To soap_out_string


#define soap_s2_wsa5__To soap_s2string


#define soap_in__wsa5__To soap_in_string


#define soap_put__wsa5__To soap_put_string


#define soap_write__wsa5__To soap_write_string


#define soap_get__wsa5__To soap_get_string


#define soap_read__wsa5__To soap_read_string

#endif
/* _wsa5__MessageID is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__MessageID_DEFINED
#define SOAP_TYPE__wsa5__MessageID_DEFINED

#define soap_default__wsa5__MessageID(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap__wsa5__MessageID2s soap_string2s


#define soap_out__wsa5__MessageID soap_out_string


#define soap_s2_wsa5__MessageID soap_s2string


#define soap_in__wsa5__MessageID soap_in_string


#define soap_put__wsa5__MessageID soap_put_string


#define soap_write__wsa5__MessageID soap_write_string


#define soap_get__wsa5__MessageID soap_get_string


#define soap_read__wsa5__MessageID soap_read_string

#endif

#ifndef SOAP_TYPE_PointerToint_DEFINED
#define SOAP_TYPE_PointerToint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_XML_DEFINED
#define SOAP_TYPE_PointerTo_XML_DEFINED
#endif

#ifndef SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
#define SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__FaultCodesOpenEnumType(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);

#define soap_wsa5__FaultCodesOpenEnumType2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__FaultCodesOpenEnumType soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

inline int soap_write_wsa5__FaultCodesOpenEnumType(struct soap *soap, char *const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_wsa5__FaultCodesOpenEnumType(soap, p, "wsa5:FaultCodesOpenEnumType", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

inline int soap_read_wsa5__FaultCodesOpenEnumType(struct soap *soap, char **p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_wsa5__FaultCodesOpenEnumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelationshipTypeOpenEnum(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);

#define soap_wsa5__RelationshipTypeOpenEnum2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__RelationshipTypeOpenEnum soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

inline int soap_write_wsa5__RelationshipTypeOpenEnum(struct soap *soap, char *const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, p, "wsa5:RelationshipTypeOpenEnum", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

inline int soap_read_wsa5__RelationshipTypeOpenEnum(struct soap *soap, char **p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_wsa5__RelationshipTypeOpenEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_DEFINED
#define SOAP_TYPE_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const char *, int, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *const*, const char *);
SOAP_FMAC3 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES ** SOAP_FMAC4 soap_in_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, const char*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *const*, const char*, const char*);
SOAP_FMAC3 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES ** SOAP_FMAC4 soap_get_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST_DEFINED
#define SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, const char *, int, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *const*, const char *);
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST ** SOAP_FMAC4 soap_in_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *const*, const char*, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST ** SOAP_FMAC4 soap_get_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST_DEFINED
#define SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, const char *, int, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *const*, const char *);
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST ** SOAP_FMAC4 soap_in_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *const*, const char*, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST ** SOAP_FMAC4 soap_get_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST_DEFINED
#define SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const char *, int, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *const*, const char *);
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST ** SOAP_FMAC4 soap_in_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *const*, const char*, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST ** SOAP_FMAC4 soap_get_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST_DEFINED
#define SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const char *, int, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *const*, const char *);
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST ** SOAP_FMAC4 soap_in_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const char*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *const*, const char*, const char*);
SOAP_FMAC3 ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST ** SOAP_FMAC4 soap_get_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTounsignedByte_DEFINED
#define SOAP_TYPE_PointerTounsignedByte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__QName(soap, p, "QName", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_string(soap, p, "string", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST_DEFINED
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const char*, int, const std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> *, const char*);
SOAP_FMAC3 std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, const char*, std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> *, const char*);
SOAP_FMAC1 std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *>  * soap_new_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap *soap, int n = -1)
{	return soap_instantiate_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST_DEFINED
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const char*, int, const std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> *, const char*);
SOAP_FMAC3 std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, const char*, std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> *, const char*);
SOAP_FMAC1 std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *>  * soap_new_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap *soap, int n = -1)
{	return soap_instantiate_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap, n, NULL, NULL, NULL);
}
#endif

#endif

/* End of soapH.h */
