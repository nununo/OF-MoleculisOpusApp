/* soapStub.h
   Generated by gSOAP 2.8.29 for roffssm.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <deque>
#include <list>
#include <vector>
#include <set>
#define SOAP_NAMESPACE_OF_ns1	"urn:sap-com:document:sap:rfc:functions"
#define SOAP_WSA_2005

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20829
# error "GSOAP VERSION 20829 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* wsa5.h:94 */
#ifndef SOAP_TYPE_wsa5__RelationshipType
#define SOAP_TYPE_wsa5__RelationshipType (49)
/* wsa5:RelationshipType */
enum wsa5__RelationshipType {
	http_x003a_x002f_x002fwww_x002ew3_x002eorg_x002f2005_x002f08_x002faddressing_x002freply = 0
};
#endif

/* wsa5.h:102 */
#ifndef SOAP_TYPE_wsa5__FaultCodesType
#define SOAP_TYPE_wsa5__FaultCodesType (50)
/* wsa5:FaultCodesType */
enum wsa5__FaultCodesType {
	wsa5__InvalidAddressingHeader = 0,
	wsa5__InvalidAddress = 1,
	wsa5__InvalidEPR = 2,
	wsa5__InvalidCardinality = 3,
	wsa5__MissingAddressInEPR = 4,
	wsa5__DuplicateMessageID = 5,
	wsa5__ActionMismatch = 6,
	wsa5__MessageAddressingHeaderRequired = 7,
	wsa5__DestinationUnreachable = 8,
	wsa5__ActionNotSupported = 9,
	wsa5__EndpointUnavailable = 10
};
#endif

/* wsa5.h:252 */
#ifndef SOAP_TYPE__wsa5__IsReferenceParameter
#define SOAP_TYPE__wsa5__IsReferenceParameter (70)
/* wsa5:IsReferenceParameter */
enum _wsa5__IsReferenceParameter {
	_wsa5__IsReferenceParameter__false = 0,
	_wsa5__IsReferenceParameter__true = 1
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class xsd__base64Binary;	/* roffssm.h:145 */
class ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST;	/* roffssm.h:161 */
class ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST;	/* roffssm.h:164 */
class ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST;	/* roffssm.h:167 */
class ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST;	/* roffssm.h:170 */
class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;	/* roffssm.h:173 */
class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse;	/* roffssm.h:176 */
struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;	/* roffssm.h:570 */
struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_;	/* roffssm.h:656 */
struct wsa5__EndpointReferenceType;	/* wsa5.h:63 */
struct wsa5__ReferenceParametersType;	/* wsa5.h:66 */
struct wsa5__MetadataType;	/* wsa5.h:69 */
struct wsa5__ProblemActionType;	/* wsa5.h:84 */
struct wsa5__RelatesToType;	/* wsa5.h:72 */
struct chan__ChannelInstanceType;	/* wsa5.h:258 */

/* roffssm.h:145 */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (11)
/* binary data attached as MTOM/MIME/DIME attachment or included as xsd:base64Binary base64: */
class SOAP_CMAC xsd__base64Binary {
      public:
        unsigned char *__ptr;
        int __size;
        /// Optional element 'id' of XSD type 'xsd:string'
        char *id;
        /// Optional element 'type' of XSD type 'xsd:string'
        char *type;
        /// Optional element 'options' of XSD type 'xsd:string'
        char *options;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_xsd__base64Binary
        virtual int soap_type(void) const { return SOAP_TYPE_xsd__base64Binary; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type xsd__base64Binary, default initialized and not managed by a soap context
        virtual xsd__base64Binary *soap_alloc(void) const { return SOAP_NEW(xsd__base64Binary); }
      public:
        /// Constructor with initializations
        xsd__base64Binary()
        {
          __ptr = (unsigned char *)0;
          __size = 0;
          id = NULL;
          type = (char *)0;
          options = (char *)0;
          soap = (struct soap *)0;
        }
        virtual ~xsd__base64Binary() { }
        /// Friend allocator used by soap_new_xsd__base64Binary(struct soap*, int)
        friend SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:161 */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST (16)
/* complex XSD type 'ns1:ZSSM_S_MESSAGE_LIST': */
class SOAP_CMAC ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST {
      public:
        /// Required element 'ID_ROFF' of XSD type 'ns1:char12'
        std::string ID_USCOREROFF;
        /// Required element 'ID_SAP' of XSD type 'ns1:char10'
        std::string ID_USCORESAP;
        /// Required element 'PARTNER' of XSD type 'ns1:char40'
        std::string PARTNER;
        /// Required element 'OBJECT_ID' of XSD type 'ns1:char10'
        std::string OBJECT_USCOREID;
        /// Required element 'DESCRIPTION' of XSD type 'ns1:char40'
        std::string DESCRIPTION;
        /// Required element 'STATUS' of XSD type 'ns1:char30'
        std::string STATUS;
        /// Required element 'POSTING_DATE' of XSD type 'ns1:date10'
        std::string POSTING_USCOREDATE;
        /// Required element 'CLOSE_DATE' of XSD type 'ns1:date10'
        std::string CLOSE_USCOREDATE;
        /// Required element 'GUID' of XSD type 'ns1:byte16'
        xsd__base64Binary GUID;
        /// Required element 'INCIDENT' of XSD type 'ns1:char10'
        std::string INCIDENT;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST
        virtual int soap_type(void) const { return SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST, default initialized and not managed by a soap context
        virtual ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *soap_alloc(void) const { return SOAP_NEW(ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST); }
      public:
        /// Constructor with initializations
        ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST()
        {
          soap = (struct soap *)0;
        }
        virtual ~ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST() { }
        /// Friend allocator used by soap_new_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, int)
        friend SOAP_FMAC1 ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:164 */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST (17)
/* complex XSD type 'ns1:ZSSM_S_PROJ_LIST': */
class SOAP_CMAC ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST {
      public:
        /// Required element 'OBJECT_ID' of XSD type 'ns1:char10'
        std::string OBJECT_USCOREID;
        /// Required element 'ID_ROFF' of XSD type 'ns1:char12'
        std::string ID_USCOREROFF;
        /// Required element 'ID_PROJ_ROFF' of XSD type 'ns1:char12'
        std::string ID_USCOREPROJ_USCOREROFF;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST
        virtual int soap_type(void) const { return SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST, default initialized and not managed by a soap context
        virtual ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *soap_alloc(void) const { return SOAP_NEW(ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST); }
      public:
        /// Constructor with initializations
        ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST()
        {
          soap = (struct soap *)0;
        }
        virtual ~ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST() { }
        /// Friend allocator used by soap_new_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, int)
        friend SOAP_FMAC1 ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:167 */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST (18)
/* complex XSD type 'ns1:ZSSM_T_MESSAGE_LIST': */
class SOAP_CMAC ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST {
      public:
        /// Optional element 'item' of XSD type 'ns1:ZSSM_S_MESSAGE_LIST'
        std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *> item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST
        virtual int soap_type(void) const { return SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST, default initialized and not managed by a soap context
        virtual ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *soap_alloc(void) const { return SOAP_NEW(ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST); }
      public:
        /// Constructor with initializations
        ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST()
        {
          soap = (struct soap *)0;
        }
        virtual ~ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST() { }
        /// Friend allocator used by soap_new_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, int)
        friend SOAP_FMAC1 ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:170 */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST (19)
/* complex XSD type 'ns1:ZSSM_T_PROJ_LIST': */
class SOAP_CMAC ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST {
      public:
        /// Optional element 'item' of XSD type 'ns1:ZSSM_S_PROJ_LIST'
        std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *> item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST
        virtual int soap_type(void) const { return SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST, default initialized and not managed by a soap context
        virtual ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *soap_alloc(void) const { return SOAP_NEW(ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST); }
      public:
        /// Constructor with initializations
        ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST()
        {
          soap = (struct soap *)0;
        }
        virtual ~ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST() { }
        /// Friend allocator used by soap_new_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, int)
        friend SOAP_FMAC1 ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * SOAP_FMAC2 soap_instantiate_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:173 */
#ifndef SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
#define SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES (20)
/* complex XSD type 'ns1:Z_SSM_LIST_MESSAGES': */
class SOAP_CMAC _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES {
      public:
        /// Required element 'ALL' of XSD type 'ns1:char1'
        std::string ALL;
        /// Required element 'DATA' of XSD type 'ns1:date10'
        std::string DATA;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
        virtual int soap_type(void) const { return SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES, default initialized and not managed by a soap context
        virtual _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *soap_alloc(void) const { return SOAP_NEW(_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES); }
      public:
        /// Constructor with initializations
        _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES()
        {
          soap = (struct soap *)0;
        }
        virtual ~_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES() { }
        /// Friend allocator used by soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, int)
        friend SOAP_FMAC1 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC2 soap_instantiate__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:176 */
#ifndef SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
#define SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse (21)
/* complex XSD type 'ns1:Z_SSM_LIST_MESSAGESResponse': */
class SOAP_CMAC _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse {
      public:
        /// Required element 'MESSAGES' of XSD type 'ns1:ZSSM_T_MESSAGE_LIST'
        ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *MESSAGES;
        /// Required element 'PROJECTS' of XSD type 'ns1:ZSSM_T_PROJ_LIST'
        ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *PROJECTS;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
        virtual int soap_type(void) const { return SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse, default initialized and not managed by a soap context
        virtual _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse *soap_alloc(void) const { return SOAP_NEW(_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse); }
      public:
        /// Constructor with initializations
        _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse()
        {
          MESSAGES = (ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST *)0;
          PROJECTS = (ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST *)0;
          soap = (struct soap *)0;
        }
        virtual ~_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse() { }
        /// Friend allocator used by soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, int)
        friend SOAP_FMAC1 _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse * SOAP_FMAC2 soap_instantiate__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:570 */
#ifndef SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
#define SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES (39)
/* Wrapper: */
struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES {
      public:
        /** Optional element 'ns1:Z_SSM_LIST_MESSAGES' of XSD type 'ns1:Z_SSM_LIST_MESSAGES' */
        _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;
      public:
        /** Return unique type id SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES */
        int soap_type() const { return SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES; }
        /** Constructor with member initializations */
        __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES()
        {
          ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES = (_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *)0;
        }
        /** Friend allocator used by soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, int) */
        friend SOAP_FMAC1 __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * SOAP_FMAC2 soap_instantiate___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* roffssm.h:656 */
#ifndef SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_
#define SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ (41)
/* Wrapper: */
struct __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ {
      public:
        /** Optional element 'ns1:Z_SSM_LIST_MESSAGES' of XSD type 'ns1:Z_SSM_LIST_MESSAGES' */
        _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;
      public:
        /** Return unique type id SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ */
        int soap_type() const { return SOAP_TYPE___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_; }
        /** Constructor with member initializations */
        __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_()
        {
          ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES = (_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES *)0;
        }
        /** Friend allocator used by soap_new___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, int) */
        friend SOAP_FMAC1 __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_ * SOAP_FMAC2 soap_instantiate___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:63 */
#ifndef SOAP_TYPE_wsa5__EndpointReferenceType
#define SOAP_TYPE_wsa5__EndpointReferenceType (42)
/* complex XSD type 'wsa5:EndpointReferenceType': */
struct wsa5__EndpointReferenceType {
      public:
        /** Required element 'wsa5:Address' of XSD type 'xsd:string' */
        char *Address;
        /** Optional element 'wsa5:ReferenceParameters' of XSD type 'wsa5:ReferenceParametersType' */
        struct wsa5__ReferenceParametersType *ReferenceParameters;
        /** Optional element 'wsa5:Metadata' of XSD type 'wsa5:MetadataType' */
        struct wsa5__MetadataType *Metadata;
        /** Sequence of elements '-any' of XSD type 'xsd:anyType' stored in dynamic array __any of length __size */
        int __size;
        char **__any;
        /** Optional attribute '-anyAttribute' of XSD type 'xsd:anyType' */
        char *__anyAttribute;
      public:
        /** Return unique type id SOAP_TYPE_wsa5__EndpointReferenceType */
        int soap_type() const { return SOAP_TYPE_wsa5__EndpointReferenceType; }
        /** Constructor with member initializations */
        wsa5__EndpointReferenceType()
        {
          Address = (char *)0;
          ReferenceParameters = (struct wsa5__ReferenceParametersType *)0;
          Metadata = (struct wsa5__MetadataType *)0;
          __size = 0;
          __any = NULL;
          __anyAttribute = (char *)0;
        }
        /** Friend allocator used by soap_new_wsa5__EndpointReferenceType(struct soap*, int) */
        friend SOAP_FMAC1 wsa5__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa5__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:66 */
#ifndef SOAP_TYPE_wsa5__ReferenceParametersType
#define SOAP_TYPE_wsa5__ReferenceParametersType (43)
/* complex XSD type 'wsa5:ReferenceParametersType': */
struct wsa5__ReferenceParametersType {
      public:
        /** Optional element 'chan:ChannelInstance' of XSD type 'xsd:int' */
        int *chan__ChannelInstance;
        /** Sequence of elements '-any' of XSD type 'xsd:anyType' stored in dynamic array __any of length __size */
        int __size;
        char **__any;
        /** Optional attribute '-anyAttribute' of XSD type 'xsd:anyType' */
        char *__anyAttribute;
      public:
        /** Return unique type id SOAP_TYPE_wsa5__ReferenceParametersType */
        int soap_type() const { return SOAP_TYPE_wsa5__ReferenceParametersType; }
        /** Constructor with member initializations */
        wsa5__ReferenceParametersType()
        {
          chan__ChannelInstance = (int *)0;
          __size = 0;
          __any = NULL;
          __anyAttribute = (char *)0;
        }
        /** Friend allocator used by soap_new_wsa5__ReferenceParametersType(struct soap*, int) */
        friend SOAP_FMAC1 wsa5__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa5__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:69 */
#ifndef SOAP_TYPE_wsa5__MetadataType
#define SOAP_TYPE_wsa5__MetadataType (44)
/* complex XSD type 'wsa5:MetadataType': */
struct wsa5__MetadataType {
      public:
        /** Sequence of elements '-any' of XSD type 'xsd:anyType' stored in dynamic array __any of length __size */
        int __size;
        char **__any;
        /** Optional attribute '-anyAttribute' of XSD type 'xsd:anyType' */
        char *__anyAttribute;
      public:
        /** Return unique type id SOAP_TYPE_wsa5__MetadataType */
        int soap_type() const { return SOAP_TYPE_wsa5__MetadataType; }
        /** Constructor with member initializations */
        wsa5__MetadataType()
        {
          __size = 0;
          __any = NULL;
          __anyAttribute = (char *)0;
        }
        /** Friend allocator used by soap_new_wsa5__MetadataType(struct soap*, int) */
        friend SOAP_FMAC1 wsa5__MetadataType * SOAP_FMAC2 soap_instantiate_wsa5__MetadataType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:84 */
#ifndef SOAP_TYPE_wsa5__ProblemActionType
#define SOAP_TYPE_wsa5__ProblemActionType (46)
/* complex XSD type 'wsa5:ProblemActionType': */
struct wsa5__ProblemActionType {
      public:
        /** Optional element 'wsa5:Action' of XSD type 'xsd:string' */
        char *Action;
        /** Optional element 'wsa5:SoapAction' of XSD type 'xsd:string' */
        char *SoapAction;
        /** Optional attribute '-anyAttribute' of XSD type 'xsd:anyType' */
        char *__anyAttribute;
      public:
        /** Return unique type id SOAP_TYPE_wsa5__ProblemActionType */
        int soap_type() const { return SOAP_TYPE_wsa5__ProblemActionType; }
        /** Constructor with member initializations */
        wsa5__ProblemActionType()
        {
          Action = (char *)0;
          SoapAction = (char *)0;
          __anyAttribute = (char *)0;
        }
        /** Friend allocator used by soap_new_wsa5__ProblemActionType(struct soap*, int) */
        friend SOAP_FMAC1 wsa5__ProblemActionType * SOAP_FMAC2 soap_instantiate_wsa5__ProblemActionType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:72 */
#ifndef SOAP_TYPE_wsa5__RelatesToType
#define SOAP_TYPE_wsa5__RelatesToType (45)
/* simple XSD type 'wsa5:RelatesToType': */
struct wsa5__RelatesToType {
      public:
        /** Simple content of XSD type 'xsd:string' wrapped by this struct */
        char *__item;
        /** Optional attribute 'RelationshipType' of XSD type 'wsa5:RelationshipTypeOpenEnum' */
        char *RelationshipType;
        /** Optional attribute '-anyAttribute' of XSD type 'xsd:anyType' */
        char *__anyAttribute;
      public:
        /** Return unique type id SOAP_TYPE_wsa5__RelatesToType */
        int soap_type() const { return SOAP_TYPE_wsa5__RelatesToType; }
        /** Constructor with member initializations */
        wsa5__RelatesToType()
        {
          __item = (char *)0;
          RelationshipType = (char *)0;
          __anyAttribute = (char *)0;
        }
        /** Friend allocator used by soap_new_wsa5__RelatesToType(struct soap*, int) */
        friend SOAP_FMAC1 wsa5__RelatesToType * SOAP_FMAC2 soap_instantiate_wsa5__RelatesToType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:258 */
#ifndef SOAP_TYPE_chan__ChannelInstanceType
#define SOAP_TYPE_chan__ChannelInstanceType (71)
/* simple XSD type 'chan:ChannelInstanceType': */
struct chan__ChannelInstanceType {
      public:
        /** Simple content of XSD type 'xsd:int' wrapped by this struct */
        int __item;
        /** Optional attribute 'wsa5:IsReferenceParameter' of XSD type 'wsa5:IsReferenceParameter' */
        enum _wsa5__IsReferenceParameter wsa5__IsReferenceParameter;	 /**< default = (enum _wsa5__IsReferenceParameter)0 */
      public:
        /** Return unique type id SOAP_TYPE_chan__ChannelInstanceType */
        int soap_type() const { return SOAP_TYPE_chan__ChannelInstanceType; }
        /** Constructor with member initializations */
        chan__ChannelInstanceType()
        {
          __item = (int)0;
          wsa5__IsReferenceParameter = (enum _wsa5__IsReferenceParameter)0;
        }
        /** Friend allocator used by soap_new_chan__ChannelInstanceType(struct soap*, int) */
        friend SOAP_FMAC1 chan__ChannelInstanceType * SOAP_FMAC2 soap_instantiate_chan__ChannelInstanceType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* wsa5.h:264 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (72)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
      public:
        /** Optional element 'wsa5:MessageID' of XSD type 'wsa5:MessageID' */
        char *wsa5__MessageID;
        /** Optional element 'wsa5:RelatesTo' of XSD type 'wsa5:RelatesTo' */
        struct wsa5__RelatesToType *wsa5__RelatesTo;
        /** Optional element 'wsa5:From' of XSD type 'wsa5:From' */
        struct wsa5__EndpointReferenceType *wsa5__From;
        /** MustUnderstand */
        struct wsa5__EndpointReferenceType *wsa5__ReplyTo;
        /** MustUnderstand */
        struct wsa5__EndpointReferenceType *wsa5__FaultTo;
        /** MustUnderstand */
        char *wsa5__To;
        /** MustUnderstand */
        char *wsa5__Action;
        /** Optional element 'chan:ChannelInstance' of XSD type 'chan:ChannelInstanceType' */
        struct chan__ChannelInstanceType *chan__ChannelInstance;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header()
        {
          wsa5__MessageID = (char *)0;
          wsa5__RelatesTo = (struct wsa5__RelatesToType *)0;
          wsa5__From = (struct wsa5__EndpointReferenceType *)0;
          wsa5__ReplyTo = (struct wsa5__EndpointReferenceType *)0;
          wsa5__FaultTo = (struct wsa5__EndpointReferenceType *)0;
          wsa5__To = (char *)0;
          wsa5__Action = (char *)0;
          chan__ChannelInstance = (struct chan__ChannelInstanceType *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Header(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa5.h:281 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (78)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail()
        {
          __any = (char *)0;
          __type = 0;
          fault = NULL;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Detail(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa5.h:282 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (80)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code()
        {
          SOAP_ENV__Value = (char *)0;
          SOAP_ENV__Subcode = (struct SOAP_ENV__Code *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Code(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa5.h:283 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (82)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason()
        {
          SOAP_ENV__Text = (char *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Reason(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* wsa5.h:288 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (86)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault()
        {
          faultcode = (char *)0;
          faultstring = (char *)0;
          faultactor = (char *)0;
          detail = (struct SOAP_ENV__Detail *)0;
          SOAP_ENV__Code = (struct SOAP_ENV__Code *)0;
          SOAP_ENV__Reason = (struct SOAP_ENV__Reason *)0;
          SOAP_ENV__Node = (char *)0;
          SOAP_ENV__Role = (char *)0;
          SOAP_ENV__Detail = (struct SOAP_ENV__Detail *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Fault(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* roffssm.h:106 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* roffssm.h:106 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* roffssm.h:189 */
#ifndef SOAP_TYPE_ns1__byte16
#define SOAP_TYPE_ns1__byte16 (22)
typedef xsd__base64Binary ns1__byte16;
#endif

/* roffssm.h:194 */
#ifndef SOAP_TYPE_ns1__char1
#define SOAP_TYPE_ns1__char1 (24)
typedef std::string ns1__char1;
#endif

/* roffssm.h:199 */
#ifndef SOAP_TYPE_ns1__char10
#define SOAP_TYPE_ns1__char10 (25)
typedef std::string ns1__char10;
#endif

/* roffssm.h:204 */
#ifndef SOAP_TYPE_ns1__char12
#define SOAP_TYPE_ns1__char12 (26)
typedef std::string ns1__char12;
#endif

/* roffssm.h:209 */
#ifndef SOAP_TYPE_ns1__char30
#define SOAP_TYPE_ns1__char30 (27)
typedef std::string ns1__char30;
#endif

/* roffssm.h:214 */
#ifndef SOAP_TYPE_ns1__char40
#define SOAP_TYPE_ns1__char40 (28)
typedef std::string ns1__char40;
#endif

/* roffssm.h:220 */
#ifndef SOAP_TYPE_ns1__date10
#define SOAP_TYPE_ns1__date10 (29)
typedef std::string ns1__date10;
#endif

/* wsa5.h:87 */
#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum (47)
typedef char *wsa5__RelationshipTypeOpenEnum;
#endif

/* wsa5.h:90 */
#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType (48)
typedef char *wsa5__FaultCodesOpenEnumType;
#endif

/* wsa5.h:209 */
#ifndef SOAP_TYPE__wsa5__EndpointReference
#define SOAP_TYPE__wsa5__EndpointReference (55)
typedef struct wsa5__EndpointReferenceType _wsa5__EndpointReference;
#endif

/* wsa5.h:212 */
#ifndef SOAP_TYPE__wsa5__ReferenceParameters
#define SOAP_TYPE__wsa5__ReferenceParameters (56)
typedef struct wsa5__ReferenceParametersType _wsa5__ReferenceParameters;
#endif

/* wsa5.h:215 */
#ifndef SOAP_TYPE__wsa5__Metadata
#define SOAP_TYPE__wsa5__Metadata (57)
typedef struct wsa5__MetadataType _wsa5__Metadata;
#endif

/* wsa5.h:218 */
#ifndef SOAP_TYPE__wsa5__MessageID
#define SOAP_TYPE__wsa5__MessageID (58)
typedef char *_wsa5__MessageID;
#endif

/* wsa5.h:221 */
#ifndef SOAP_TYPE__wsa5__RelatesTo
#define SOAP_TYPE__wsa5__RelatesTo (59)
typedef struct wsa5__RelatesToType _wsa5__RelatesTo;
#endif

/* wsa5.h:224 */
#ifndef SOAP_TYPE__wsa5__ReplyTo
#define SOAP_TYPE__wsa5__ReplyTo (60)
typedef struct wsa5__EndpointReferenceType _wsa5__ReplyTo;
#endif

/* wsa5.h:227 */
#ifndef SOAP_TYPE__wsa5__From
#define SOAP_TYPE__wsa5__From (61)
typedef struct wsa5__EndpointReferenceType _wsa5__From;
#endif

/* wsa5.h:230 */
#ifndef SOAP_TYPE__wsa5__FaultTo
#define SOAP_TYPE__wsa5__FaultTo (62)
typedef struct wsa5__EndpointReferenceType _wsa5__FaultTo;
#endif

/* wsa5.h:233 */
#ifndef SOAP_TYPE__wsa5__To
#define SOAP_TYPE__wsa5__To (63)
typedef char *_wsa5__To;
#endif

/* wsa5.h:236 */
#ifndef SOAP_TYPE__wsa5__Action
#define SOAP_TYPE__wsa5__Action (64)
typedef char *_wsa5__Action;
#endif

/* wsa5.h:239 */
#ifndef SOAP_TYPE__wsa5__RetryAfter
#define SOAP_TYPE__wsa5__RetryAfter (66)
typedef ULONG64 _wsa5__RetryAfter;
#endif

/* wsa5.h:242 */
#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName
#define SOAP_TYPE__wsa5__ProblemHeaderQName (67)
typedef _QName _wsa5__ProblemHeaderQName;
#endif

/* wsa5.h:245 */
#ifndef SOAP_TYPE__wsa5__ProblemIRI
#define SOAP_TYPE__wsa5__ProblemIRI (68)
typedef char *_wsa5__ProblemIRI;
#endif

/* wsa5.h:248 */
#ifndef SOAP_TYPE__wsa5__ProblemAction
#define SOAP_TYPE__wsa5__ProblemAction (69)
typedef struct wsa5__ProblemActionType _wsa5__ProblemAction;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* unsigned char has binding name 'unsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (13)
#endif

/* unsigned int has binding name 'unsignedInt' for type 'xsd:unsignedInt' */
#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (12)
#endif

/* _wsa5__RetryAfter has binding name '_wsa5__RetryAfter' for type '' */
#ifndef SOAP_TYPE__wsa5__RetryAfter
#define SOAP_TYPE__wsa5__RetryAfter (66)
#endif

/* ULONG64 has binding name 'ULONG64' for type 'xsd:unsignedLong' */
#ifndef SOAP_TYPE_ULONG64
#define SOAP_TYPE_ULONG64 (65)
#endif

/* enum _wsa5__IsReferenceParameter has binding name '_wsa5__IsReferenceParameter' for type 'wsa5:IsReferenceParameter' */
#ifndef SOAP_TYPE__wsa5__IsReferenceParameter
#define SOAP_TYPE__wsa5__IsReferenceParameter (70)
#endif

/* enum wsa5__FaultCodesType has binding name 'wsa5__FaultCodesType' for type 'wsa5:FaultCodesType' */
#ifndef SOAP_TYPE_wsa5__FaultCodesType
#define SOAP_TYPE_wsa5__FaultCodesType (50)
#endif

/* enum wsa5__RelationshipType has binding name 'wsa5__RelationshipType' for type 'wsa5:RelationshipType' */
#ifndef SOAP_TYPE_wsa5__RelationshipType
#define SOAP_TYPE_wsa5__RelationshipType (49)
#endif

/* ns1__date10 has binding name 'ns1__date10' for type 'ns1:date10' */
#ifndef SOAP_TYPE_ns1__date10
#define SOAP_TYPE_ns1__date10 (29)
#endif

/* ns1__char40 has binding name 'ns1__char40' for type 'ns1:char40' */
#ifndef SOAP_TYPE_ns1__char40
#define SOAP_TYPE_ns1__char40 (28)
#endif

/* ns1__char30 has binding name 'ns1__char30' for type 'ns1:char30' */
#ifndef SOAP_TYPE_ns1__char30
#define SOAP_TYPE_ns1__char30 (27)
#endif

/* ns1__char12 has binding name 'ns1__char12' for type 'ns1:char12' */
#ifndef SOAP_TYPE_ns1__char12
#define SOAP_TYPE_ns1__char12 (26)
#endif

/* ns1__char10 has binding name 'ns1__char10' for type 'ns1:char10' */
#ifndef SOAP_TYPE_ns1__char10
#define SOAP_TYPE_ns1__char10 (25)
#endif

/* ns1__char1 has binding name 'ns1__char1' for type 'ns1:char1' */
#ifndef SOAP_TYPE_ns1__char1
#define SOAP_TYPE_ns1__char1 (24)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (23)
#endif

/* ns1__byte16 has binding name 'ns1__byte16' for type 'ns1:byte16' */
#ifndef SOAP_TYPE_ns1__byte16
#define SOAP_TYPE_ns1__byte16 (22)
#endif

/* _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse has binding name '_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse' for type '' */
#ifndef SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
#define SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse (21)
#endif

/* _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES has binding name '_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES' for type '' */
#ifndef SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
#define SOAP_TYPE__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES (20)
#endif

/* ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST has binding name 'ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST' for type 'ns1:ZSSM_T_PROJ_LIST' */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST (19)
#endif

/* ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST has binding name 'ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST' for type 'ns1:ZSSM_T_MESSAGE_LIST' */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST (18)
#endif

/* ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST has binding name 'ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST' for type 'ns1:ZSSM_S_PROJ_LIST' */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST (17)
#endif

/* ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST has binding name 'ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST' for type 'ns1:ZSSM_S_MESSAGE_LIST' */
#ifndef SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST (16)
#endif

/* xsd__base64Binary has binding name 'xsd__base64Binary' for type 'xsd:base64Binary' */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (11)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (86)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (82)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (80)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (78)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (72)
#endif

/* struct chan__ChannelInstanceType has binding name 'chan__ChannelInstanceType' for type 'chan:ChannelInstanceType' */
#ifndef SOAP_TYPE_chan__ChannelInstanceType
#define SOAP_TYPE_chan__ChannelInstanceType (71)
#endif

/* _wsa5__ProblemAction has binding name '_wsa5__ProblemAction' for type '' */
#ifndef SOAP_TYPE__wsa5__ProblemAction
#define SOAP_TYPE__wsa5__ProblemAction (69)
#endif

/* _wsa5__FaultTo has binding name '_wsa5__FaultTo' for type '' */
#ifndef SOAP_TYPE__wsa5__FaultTo
#define SOAP_TYPE__wsa5__FaultTo (62)
#endif

/* _wsa5__From has binding name '_wsa5__From' for type '' */
#ifndef SOAP_TYPE__wsa5__From
#define SOAP_TYPE__wsa5__From (61)
#endif

/* _wsa5__ReplyTo has binding name '_wsa5__ReplyTo' for type '' */
#ifndef SOAP_TYPE__wsa5__ReplyTo
#define SOAP_TYPE__wsa5__ReplyTo (60)
#endif

/* _wsa5__RelatesTo has binding name '_wsa5__RelatesTo' for type '' */
#ifndef SOAP_TYPE__wsa5__RelatesTo
#define SOAP_TYPE__wsa5__RelatesTo (59)
#endif

/* _wsa5__Metadata has binding name '_wsa5__Metadata' for type '' */
#ifndef SOAP_TYPE__wsa5__Metadata
#define SOAP_TYPE__wsa5__Metadata (57)
#endif

/* _wsa5__ReferenceParameters has binding name '_wsa5__ReferenceParameters' for type '' */
#ifndef SOAP_TYPE__wsa5__ReferenceParameters
#define SOAP_TYPE__wsa5__ReferenceParameters (56)
#endif

/* _wsa5__EndpointReference has binding name '_wsa5__EndpointReference' for type '' */
#ifndef SOAP_TYPE__wsa5__EndpointReference
#define SOAP_TYPE__wsa5__EndpointReference (55)
#endif

/* struct wsa5__ProblemActionType has binding name 'wsa5__ProblemActionType' for type 'wsa5:ProblemActionType' */
#ifndef SOAP_TYPE_wsa5__ProblemActionType
#define SOAP_TYPE_wsa5__ProblemActionType (46)
#endif

/* struct wsa5__RelatesToType has binding name 'wsa5__RelatesToType' for type 'wsa5:RelatesToType' */
#ifndef SOAP_TYPE_wsa5__RelatesToType
#define SOAP_TYPE_wsa5__RelatesToType (45)
#endif

/* struct wsa5__MetadataType has binding name 'wsa5__MetadataType' for type 'wsa5:MetadataType' */
#ifndef SOAP_TYPE_wsa5__MetadataType
#define SOAP_TYPE_wsa5__MetadataType (44)
#endif

/* struct wsa5__ReferenceParametersType has binding name 'wsa5__ReferenceParametersType' for type 'wsa5:ReferenceParametersType' */
#ifndef SOAP_TYPE_wsa5__ReferenceParametersType
#define SOAP_TYPE_wsa5__ReferenceParametersType (43)
#endif

/* struct wsa5__EndpointReferenceType has binding name 'wsa5__EndpointReferenceType' for type 'wsa5:EndpointReferenceType' */
#ifndef SOAP_TYPE_wsa5__EndpointReferenceType
#define SOAP_TYPE_wsa5__EndpointReferenceType (42)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (83)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (81)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (79)
#endif

/* struct chan__ChannelInstanceType * has binding name 'PointerTochan__ChannelInstanceType' for type 'chan:ChannelInstanceType' */
#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType
#define SOAP_TYPE_PointerTochan__ChannelInstanceType (77)
#endif

/* struct wsa5__EndpointReferenceType * has binding name 'PointerTo_wsa5__FaultTo' for type '' */
#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo
#define SOAP_TYPE_PointerTo_wsa5__FaultTo (76)
#endif

/* struct wsa5__EndpointReferenceType * has binding name 'PointerTo_wsa5__ReplyTo' for type '' */
#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo (75)
#endif

/* struct wsa5__EndpointReferenceType * has binding name 'PointerTo_wsa5__From' for type '' */
#ifndef SOAP_TYPE_PointerTo_wsa5__From
#define SOAP_TYPE_PointerTo_wsa5__From (74)
#endif

/* struct wsa5__RelatesToType * has binding name 'PointerTo_wsa5__RelatesTo' for type '' */
#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo (73)
#endif

/* _wsa5__ProblemIRI has binding name '_wsa5__ProblemIRI' for type '' */
#ifndef SOAP_TYPE__wsa5__ProblemIRI
#define SOAP_TYPE__wsa5__ProblemIRI (68)
#endif

/* _wsa5__ProblemHeaderQName has binding name '_wsa5__ProblemHeaderQName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName
#define SOAP_TYPE__wsa5__ProblemHeaderQName (67)
#endif

/* _wsa5__Action has binding name '_wsa5__Action' for type '' */
#ifndef SOAP_TYPE__wsa5__Action
#define SOAP_TYPE__wsa5__Action (64)
#endif

/* _wsa5__To has binding name '_wsa5__To' for type '' */
#ifndef SOAP_TYPE__wsa5__To
#define SOAP_TYPE__wsa5__To (63)
#endif

/* _wsa5__MessageID has binding name '_wsa5__MessageID' for type '' */
#ifndef SOAP_TYPE__wsa5__MessageID
#define SOAP_TYPE__wsa5__MessageID (58)
#endif

/* int * has binding name 'PointerToint' for type 'xsd:int' */
#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (54)
#endif

/* char ** has binding name 'PointerTo_XML' for type '' */
#ifndef SOAP_TYPE_PointerTo_XML
#define SOAP_TYPE_PointerTo_XML (53)
#endif

/* struct wsa5__MetadataType * has binding name 'PointerTowsa5__MetadataType' for type 'wsa5:MetadataType' */
#ifndef SOAP_TYPE_PointerTowsa5__MetadataType
#define SOAP_TYPE_PointerTowsa5__MetadataType (52)
#endif

/* struct wsa5__ReferenceParametersType * has binding name 'PointerTowsa5__ReferenceParametersType' for type 'wsa5:ReferenceParametersType' */
#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType (51)
#endif

/* wsa5__FaultCodesOpenEnumType has binding name 'wsa5__FaultCodesOpenEnumType' for type 'wsa5:FaultCodesOpenEnumType' */
#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType (48)
#endif

/* wsa5__RelationshipTypeOpenEnum has binding name 'wsa5__RelationshipTypeOpenEnum' for type 'wsa5:RelationshipTypeOpenEnum' */
#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum (47)
#endif

/* _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES * has binding name 'PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
#define SOAP_TYPE_PointerTo_ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES (36)
#endif

/* ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST * has binding name 'PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST' for type 'ns1:ZSSM_T_PROJ_LIST' */
#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST
#define SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREPROJ_USCORELIST (35)
#endif

/* ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST * has binding name 'PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST' for type 'ns1:ZSSM_T_MESSAGE_LIST' */
#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_PointerTons1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST (34)
#endif

/* ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST * has binding name 'PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST' for type 'ns1:ZSSM_S_PROJ_LIST' */
#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST
#define SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST (32)
#endif

/* ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST * has binding name 'PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST' for type 'ns1:ZSSM_S_MESSAGE_LIST' */
#ifndef SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_PointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST (30)
#endif

/* unsigned char * has binding name 'PointerTounsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (14)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/* std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST *>  has binding name 'std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST' for type 'ns1:ZSSM_S_PROJ_LIST' */
#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREPROJ_USCORELIST (33)
#endif

/* std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST *>  has binding name 'std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST' for type 'ns1:ZSSM_S_MESSAGE_LIST' */
#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST (31)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
