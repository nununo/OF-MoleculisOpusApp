// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* roffssm.h
   Generated by wsdl2h 2.8.29 from http://servicedesk.roff.pt/sap/bc/srt/wsdl/flv_10002A111AD1/srvc_url/sap/bc/srt/rfc/sap/zssm_list_messages/100/zssm_listmessages/zssm_listmessages?sap-client=100 and /Users/nununo/bin/gsoap-2.8/WS/typemap.dat
   2016-03-18 19:18:36 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on roffssm.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stl.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:sap-com:document:sap:rfc:functions                                   *
 *                                                                            *
\******************************************************************************/

/* WSDL Documentation:

*/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER                                                                 *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "stl.h"	// enable STL containers when used (option -s removes STL dependency)

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:sap-com:document:sap:rfc:functions"

*/

#define SOAP_NAMESPACE_OF_ns1	"urn:sap-com:document:sap:rfc:functions"
//gsoap ns1   schema namespace:	urn:sap-com:document:sap:rfc:functions
//gsoap ns1   schema elementForm:	unqualified
//gsoap ns1   schema attributeForm:	qualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
	struct soap *soap;
};


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST.
class ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST;

//  Forward declaration of class ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST.
class ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST;

//  Forward declaration of class ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST.
class ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST;

//  Forward declaration of class ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST.
class ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST;

//  Forward declaration of class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES.
class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES;

//  Forward declaration of class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse.
class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:sap-com:document:sap:rfc:functions                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "urn:sap-com:document:sap:rfc:functions":byte16 is a simpleType restriction of XSD type xs:base64Binary.
///
/// Length of this string is 0 to 16.
typedef xsd__base64Binary ns1__byte16 : 16;

/// @brief "urn:sap-com:document:sap:rfc:functions":char1 is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 1.
typedef std::string ns1__char1 : 1;

/// @brief "urn:sap-com:document:sap:rfc:functions":char10 is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 10.
typedef std::string ns1__char10 : 10;

/// @brief "urn:sap-com:document:sap:rfc:functions":char12 is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 12.
typedef std::string ns1__char12 : 12;

/// @brief "urn:sap-com:document:sap:rfc:functions":char30 is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 30.
typedef std::string ns1__char30 : 30;

/// @brief "urn:sap-com:document:sap:rfc:functions":char40 is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 40.
typedef std::string ns1__char40 : 40;

/// @brief "urn:sap-com:document:sap:rfc:functions":date10 is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0 to 10.
/// Content pattern is "\\d\\d\\d\\d-\\d\\d-\\d\\d".
typedef std::string ns1__date10 "\\d\\d\\d\\d-\\d\\d-\\d\\d" : 10;


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:sap-com:document:sap:rfc:functions                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "urn:sap-com:document:sap:rfc:functions":ZSSM_S_MESSAGE_LIST is a complexType.
///
/// class ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST operations:
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST* soap_new_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap*) allocate
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST* soap_new_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap*, int num) allocate array
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST* soap_new_req_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap*, ...) allocate, set required members
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST* soap_new_set_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap*, ...) allocate, set all public members
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::soap_default(soap*) reset members to default
/// - int soap_read_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST*) deserialize from a stream
/// - int soap_write_ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST(soap*, ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST*) serialize to a stream
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST* ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::soap_dup(soap*) returns deep copy of ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::soap_del() deep deletes ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST data members, use only after ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST::soap_dup(NULL) (use soapcpp2 -Ed)
class ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST
{ public:
/// Element "ID_ROFF" of XSD type "urn:sap-com:document:sap:rfc:functions":char12.
    ns1__char12                          ID_USCOREROFF                  1;	///< Required element.
/// Element "ID_SAP" of XSD type "urn:sap-com:document:sap:rfc:functions":char10.
    ns1__char10                          ID_USCORESAP                   1;	///< Required element.
/// Element "PARTNER" of XSD type "urn:sap-com:document:sap:rfc:functions":char40.
    ns1__char40                          PARTNER                        1;	///< Required element.
/// Element "OBJECT_ID" of XSD type "urn:sap-com:document:sap:rfc:functions":char10.
    ns1__char10                          OBJECT_USCOREID                1;	///< Required element.
/// Element "DESCRIPTION" of XSD type "urn:sap-com:document:sap:rfc:functions":char40.
    ns1__char40                          DESCRIPTION                    1;	///< Required element.
/// Element "STATUS" of XSD type "urn:sap-com:document:sap:rfc:functions":char30.
    ns1__char30                          STATUS                         1;	///< Required element.
/// Element "POSTING_DATE" of XSD type "urn:sap-com:document:sap:rfc:functions":date10.
    ns1__date10                          POSTING_USCOREDATE             1;	///< Required element.
/// Element "CLOSE_DATE" of XSD type "urn:sap-com:document:sap:rfc:functions":date10.
    ns1__date10                          CLOSE_USCOREDATE               1;	///< Required element.
/// Element "GUID" of XSD type "urn:sap-com:document:sap:rfc:functions":byte16.
    ns1__byte16                          GUID                           1;	///< Required element.
/// Element "INCIDENT" of XSD type "urn:sap-com:document:sap:rfc:functions":char10.
    ns1__char10                          INCIDENT                       1;	///< Required element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "urn:sap-com:document:sap:rfc:functions":ZSSM_S_PROJ_LIST is a complexType.
///
/// class ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST operations:
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST* soap_new_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap*) allocate
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST* soap_new_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap*, int num) allocate array
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST* soap_new_req_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap*, ...) allocate, set required members
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST* soap_new_set_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap*, ...) allocate, set all public members
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::soap_default(soap*) reset members to default
/// - int soap_read_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST*) deserialize from a stream
/// - int soap_write_ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST(soap*, ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST*) serialize to a stream
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST* ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::soap_dup(soap*) returns deep copy of ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::soap_del() deep deletes ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST data members, use only after ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST::soap_dup(NULL) (use soapcpp2 -Ed)
class ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST
{ public:
/// Element "OBJECT_ID" of XSD type "urn:sap-com:document:sap:rfc:functions":char10.
    ns1__char10                          OBJECT_USCOREID                1;	///< Required element.
/// Element "ID_ROFF" of XSD type "urn:sap-com:document:sap:rfc:functions":char12.
    ns1__char12                          ID_USCOREROFF                  1;	///< Required element.
/// Element "ID_PROJ_ROFF" of XSD type "urn:sap-com:document:sap:rfc:functions":char12.
    ns1__char12                          ID_USCOREPROJ_USCOREROFF       1;	///< Required element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "urn:sap-com:document:sap:rfc:functions":ZSSM_T_MESSAGE_LIST is a complexType.
///
/// class ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST operations:
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST* soap_new_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap*) allocate
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST* soap_new_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap*, int num) allocate array
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST* soap_new_req_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap*, ...) allocate, set required members
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST* soap_new_set_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap*, ...) allocate, set all public members
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST::soap_default(soap*) reset members to default
/// - int soap_read_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST*) deserialize from a stream
/// - int soap_write_ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST(soap*, ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST*) serialize to a stream
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST* ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST::soap_dup(soap*) returns deep copy of ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST::soap_del() deep deletes ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST data members, use only after ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST::soap_dup(NULL) (use soapcpp2 -Ed)
class ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST
{ public:
/// Vector of ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST* of length 0..unbounded.
    std::vector<ns1__ZSSM_USCORES_USCOREMESSAGE_USCORELIST*> item                           0;
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "urn:sap-com:document:sap:rfc:functions":ZSSM_T_PROJ_LIST is a complexType.
///
/// class ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST operations:
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST* soap_new_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap*) allocate
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST* soap_new_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap*, int num) allocate array
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST* soap_new_req_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap*, ...) allocate, set required members
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST* soap_new_set_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap*, ...) allocate, set all public members
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST::soap_default(soap*) reset members to default
/// - int soap_read_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST*) deserialize from a stream
/// - int soap_write_ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST(soap*, ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST*) serialize to a stream
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST* ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST::soap_dup(soap*) returns deep copy of ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST::soap_del() deep deletes ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST data members, use only after ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST::soap_dup(NULL) (use soapcpp2 -Ed)
class ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST
{ public:
/// Vector of ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST* of length 0..unbounded.
    std::vector<ns1__ZSSM_USCORES_USCOREPROJ_USCORELIST*> item                           0;
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:sap-com:document:sap:rfc:functions":Z_SSM_LIST_MESSAGES
/// @brief "urn:sap-com:document:sap:rfc:functions":Z_SSM_LIST_MESSAGES is a complexType.
///
/// class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES operations:
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap*) allocate
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap*, int num) allocate array
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* soap_new_req__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap*, ...) allocate, set required members
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* soap_new_set__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap*, ...) allocate, set all public members
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::soap_default(soap*) reset members to default
/// - int soap_read__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES*) deserialize from a stream
/// - int soap_write__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES*) serialize to a stream
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::soap_dup(soap*) returns deep copy of _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::soap_del() deep deletes _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES data members, use only after _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
{ public:
/// Element "ALL" of XSD type "urn:sap-com:document:sap:rfc:functions":char1.
    ns1__char1                           ALL                            1;	///< Required element.
/// Element "DATA" of XSD type "urn:sap-com:document:sap:rfc:functions":date10.
    ns1__date10                          DATA                           1;	///< Required element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "urn:sap-com:document:sap:rfc:functions":Z_SSM_LIST_MESSAGESResponse
/// @brief "urn:sap-com:document:sap:rfc:functions":Z_SSM_LIST_MESSAGESResponse is a complexType.
///
/// class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse operations:
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse* soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap*) allocate
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse* soap_new__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap*, int num) allocate array
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse* soap_new_req__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap*, ...) allocate, set required members
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse* soap_new_set__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap*, ...) allocate, set all public members
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::soap_default(soap*) reset members to default
/// - int soap_read__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse*) deserialize from a stream
/// - int soap_write__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse*) serialize to a stream
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse* _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::soap_dup(soap*) returns deep copy of _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::soap_del() deep deletes _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse data members, use only after _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
{ public:
/// Element "MESSAGES" of XSD type "urn:sap-com:document:sap:rfc:functions":ZSSM_T_MESSAGE_LIST.
    ns1__ZSSM_USCORET_USCOREMESSAGE_USCORELIST*  MESSAGES                       1;	///< Required element.
/// Element "PROJECTS" of XSD type "urn:sap-com:document:sap:rfc:functions":ZSSM_T_PROJ_LIST.
    ns1__ZSSM_USCORET_USCOREPROJ_USCORELIST*  PROJECTS                       1;	///< Required element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:sap-com:document:sap:rfc:functions                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:sap-com:document:sap:rfc:functions                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	zssm_USCORElistmessages 
//gsoap ns1  service type:	ZSSM_USCORELIST_USCOREMESSAGES 
//gsoap ns1  service port:	http://servicedesk.roff.pt/sap/bc/srt/rfc/sap/zssm_list_messages/100/zssm_listmessages/zssm_listmessages 
//gsoap ns1  service namespace:	urn:sap-com:document:sap:rfc:functions 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_documentation Documentation

@section Service_bindings Service Bindings

  - @ref zssm_USCORElistmessages

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page zssm_USCORElistmessages Binding "zssm_USCORElistmessages"

@section zssm_USCORElistmessages_operations Operations of Binding "zssm_USCORElistmessages"

  - @ref __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES

  - @ref __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_

@section zssm_USCORElistmessages_ports Endpoints of Binding "zssm_USCORElistmessages"

  - http://servicedesk.roff.pt/sap/bc/srt/rfc/sap/zssm_list_messages/100/zssm_listmessages/zssm_listmessages

@section zssm_USCORElistmessages_policy Policy of Binding "zssm_USCORElistmessages"

See Section @ref zssm_USCORElistmessages_policy_enablers

  - WS-Policy applicable to the service endpoint ports:
	- Exactly one of the following:
		- All of the following:
			- WS-Addressing is used
			- Other policy requirements:
	@verbatim
<sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
	@endverbatim
			- Other policy requirements:
	@verbatim
<saptrnbnd:OptimizedMimeSerialization xmlns:saptrnbnd="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization"
wsp:Optional="true"/>
	@endverbatim
			- WS-Addressing is used
			- Other policy requirements:
	@verbatim
<sapattahnd:Enabled xmlns:sapattahnd="http://www.sap.com/710/features/attachment/">false</sapattahnd:Enabled>
	@endverbatim
			- Other policy requirements:
	@verbatim
<saptrnbnd:OptimizedXMLTransfer xmlns:saptrnbnd="http://www.sap.com/webas/710/soap/features/transportbinding/"
wsp:Optional="true" uri="http://xml.sap.com/2006/11/esi/esp/binxml"/>
	@endverbatim

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   zssm_USCORElistmessages                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES" of service binding "zssm_USCORElistmessages".

  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- Other policy requirements:
	@verbatim
<saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
	@endverbatim
			- Other policy requirements:
	@verbatim
<sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
	@endverbatim
			- Other policy requirements:
	@verbatim
<sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
	@endverbatim
			- Other policy requirements:
	@verbatim
<saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
	@endverbatim

  - SOAP document/literal style messaging

  - Action or location: "urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequest"

  - Addressing input action: "urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequest"

  - Addressing output action: "urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES,
    // output parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse&ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
    struct soap *soap,
    // input parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES,
    // output parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse&ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
  );
@endcode

C++ proxy class (defined in soapzssm_USCORElistmessagesProxy.h):
@code
  class zssm_USCORElistmessagesProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapzssm_USCORElistmessagesService.h):
@code
  class zssm_USCORElistmessagesService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Z_USCORESSM_USCORELIST_USCOREMESSAGES SOAP
//gsoap ns1  service method-style:	Z_USCORESSM_USCORELIST_USCOREMESSAGES document
//gsoap ns1  service method-encoding:	Z_USCORESSM_USCORELIST_USCOREMESSAGES literal
//gsoap ns1  service method-input-action:	Z_USCORESSM_USCORELIST_USCOREMESSAGES urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequest
//gsoap ns1  service method-output-action:	Z_USCORESSM_USCORELIST_USCOREMESSAGES urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequestResponse
int __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES,	///< Input parameter
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse&ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_" of service binding "zssm_USCORElistmessages".

  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- Other policy requirements:
	@verbatim
<saptrhnw05:required xmlns:saptrhnw05="http://www.sap.com/NW05/soap/features/transaction/">no</saptrhnw05:required>
	@endverbatim
			- Other policy requirements:
	@verbatim
<sapcomhnd:enableCommit xmlns:sapcomhnd="http://www.sap.com/NW05/soap/features/commit/">false</sapcomhnd:enableCommit>
	@endverbatim
			- Other policy requirements:
	@verbatim
<sapblock:enableBlocking xmlns:sapblock="http://www.sap.com/NW05/soap/features/blocking/">true</sapblock:enableBlocking>
	@endverbatim
			- Other policy requirements:
	@verbatim
<saprmnw05:enableWSRM xmlns:saprmnw05="http://www.sap.com/NW05/soap/features/wsrm/">false</saprmnw05:enableWSRM>
	@endverbatim

  - SOAP document/literal style messaging

  - Action or location: "urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequest"

  - Addressing input action: "urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequest"

  - Addressing output action: "urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES,
    // output parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse&ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(
    struct soap *soap,
    // input parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES,
    // output parameters:
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse&ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
  );
@endcode

C++ proxy class (defined in soapzssm_USCORElistmessagesProxy.h):
@code
  class zssm_USCORElistmessagesProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapzssm_USCORElistmessagesService.h):
@code
  class zssm_USCORElistmessagesService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Z_USCORESSM_USCORELIST_USCOREMESSAGES_ SOAP
//gsoap ns1  service method-style:	Z_USCORESSM_USCORELIST_USCOREMESSAGES_ document
//gsoap ns1  service method-encoding:	Z_USCORESSM_USCORELIST_USCOREMESSAGES_ literal
//gsoap ns1  service method-input-action:	Z_USCORESSM_USCORELIST_USCOREMESSAGES_ urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequest
//gsoap ns1  service method-output-action:	Z_USCORESSM_USCORELIST_USCOREMESSAGES_ urn:sap-com:document:sap:rfc:functions:ZSSM_LIST_MESSAGES:Z_SSM_LIST_MESSAGESRequestResponse
int __ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES_(
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES* ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES,	///< Input parameter
    _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse&ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse	///< Output parameter
);

/**

@page zssm_USCORElistmessages Binding "zssm_USCORElistmessages"

@section zssm_USCORElistmessages_policy_enablers Policy Enablers of Binding "zssm_USCORElistmessages"

Based on policies and protocol requirements, this service requires importing "wsa5.h"

  - WS-Policy reminders and enablers (when applicable):
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Discovery 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsddapi.h" // See the user guide gsoap/doc/wsdd/html/index.html
	@endcode
    - WS-Discovery 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsddapi.h" // See the user guide gsoap/doc/wsdd/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/

#import "wsa5.h"

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "urn:sap-com:document:sap:rfc:functions"

  - <ns1:Z_SSM_LIST_MESSAGES> @ref _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGES*);
    @endcode

  - <ns1:Z_SSM_LIST_MESSAGESResponse> @ref _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse(struct soap*, _ns1__Z_USCORESSM_USCORELIST_USCOREMESSAGESResponse*);
    @endcode

*/

/* End of roffssm.h */
